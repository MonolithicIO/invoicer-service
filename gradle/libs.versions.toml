[versions]
kodein = "7.22.0"
open-pdf = "2.0.2"
dotenv = "6.4.1"
exposed = "0.51.1"
datetime = "0.6.0"
detekt-plugin = "1.23.3"
ktor = "2.3.11"
kotlin = "2.1.10"
logback-classic = "1.4.14"
logback-encoder = "7.2"
postgres = "42.5.1"
h2 = "2.1.214"
swagger = "2.9.0"
bcrypt = "0.4"
serialization-json = "1.7.1"
kover-plugin = "0.9.0-RC"
kover-gradle = "0.6.1"
detekt-gradle = "1.23.7"
coroutines = "1.8.1"
prometheus-micrometer = "1.14.3"
jedis = "5.2.0"

[libraries]
kodein-server = { module = "org.kodein.di:kodein-di-framework-ktor-server-jvm", version.ref = "kodein" }
openpdf = { module = "com.github.librepdf:openpdf", version.ref = "open-pdf" }
dotenv = { module = "io.github.cdimascio:dotenv-kotlin", version.ref = "dotenv" }

# Exposed
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jbdc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-date = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed" }

# Jedis
jedis = { module = "redis.clients:jedis", version.ref = "jedis" }

# DB
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }

# Logback

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-classic" }
logback-encoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logback-encoder" }

# Kotlin
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime-jvm", version.ref = "datetime" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization-json" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

# Detekt
detekt-api = { module = "io.gitlab.arturbosch.detekt:detekt-api", version.ref = "detekt-plugin" }
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:io.gitlab.arturbosch.detekt.gradle.plugin", version.ref = "detekt-gradle" }

# Ktor
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm" }
ktor-serialization-kotlinx-json-jvm = { module = "io.ktor:ktor-serialization-kotlinx-json-jvm" }
ktor-server-content-negotiation-jvm = { module = "io.ktor:ktor-server-content-negotiation-jvm" }
ktor-server-call-logging-jvm = { module = "io.ktor:ktor-server-call-logging-jvm" }
ktor-server-call-id-jvm = { module = "io.ktor:ktor-server-call-id-jvm" }
ktor-server-host-common-jvm = { module = "io.ktor:ktor-server-host-common-jvm" }
ktor-server-status-pages-jvm = { module = "io.ktor:ktor-server-status-pages-jvm" }
ktor-server-resources-jvm = { module = "io.ktor:ktor-server-resources-jvm" }
ktor-server-webjars-jvm = { module = "io.ktor:ktor-server-webjars-jvm" }
ktor-server-netty-jvm = { module = "io.ktor:ktor-server-netty-jvm" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml" }
ktor-server-tests-jvm = { module = "io.ktor:ktor-server-tests-jvm" }
ktor-server-auth-core = { module = "io.ktor:ktor-server-auth" }
ktor-server-auth-jwt = { module = 'io.ktor:ktor-server-auth-jwt' }
ktor-server-metrics-micrometer = { module = "io.ktor:ktor-server-metrics-micrometer" }

# Micrometer
micrometer-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "prometheus-micrometer" }

# Kover
kover-gradle = { module = "org.jetbrains.kotlinx:kover", version.ref = "kover-gradle" }

# Swagger
swagger = { module = "io.github.smiley4:ktor-swagger-ui", version.ref = "swagger" }

# Bcrypt
bcrypt = { module = "org.mindrot:jbcrypt", version.ref = "bcrypt" }

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt-plugin" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover-plugin" }

[bundles]
logback = ["logback-classic", "logback-encoder"]
exposed = ["exposed-dao", "exposed-core", "exposed-jbdc", "exposed-date"]
ktor = [
    "ktor-server-core-jvm",
    "ktor-serialization-kotlinx-json-jvm",
    "ktor-server-content-negotiation-jvm",
    "ktor-server-call-logging-jvm",
    "ktor-server-call-id-jvm",
    "ktor-server-host-common-jvm",
    "ktor-server-status-pages-jvm",
    "ktor-server-resources-jvm",
    "ktor-server-webjars-jvm",
    "ktor-server-netty-jvm",
    "ktor-server-config-yaml",
    "ktor-server-auth-core",
    "ktor-server-auth-jwt",
    "ktor-server-metrics-micrometer"
]