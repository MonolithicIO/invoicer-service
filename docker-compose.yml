services:
  invoicer-database:
    image: postgres:latest
    restart: always
    networks:
      - invoicer-network
    environment:
      POSTGRES_USER: ${INVOICER_DB_USERNAME}
      POSTGRES_PASSWORD: ${INVOICER_DB_PASSWORD}
      POSTGRES_DB: ${INVOICER_DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
  invoicer-api:
    depends_on:
      - invoicer-database
    image: alaksion/invoicer-api:0.0.6
    restart: always
    networks:
      - invoicer-network
    environment:
      INVOICER_DB_USERNAME: $INVOICER_DB_USERNAME
      INVOICER_DB_PASSWORD: $INVOICER_DB_PASSWORD
      INVOICER_DB_NAME: $INVOICER_DB_NAME
      INVOICER_DB_URL: jdbc:postgresql://invoicer-database:5432/postgres
      INVOICER_JWT_AUDIENCE: $INVOICER_JWT_AUDIENCE
      INVOICER_JWT_ISSUER: $INVOICER_JWT_ISSUER
      INVOICER_JWT_SECRET: $INVOICER_JWT_SECRET
      INVOICER_JWT_REALM: $INVOICER_JWT_REALM
      INVOICER_API_PORT: 8080
    ports:
      - "8080:8080"
  invoicer-prometheus:
    image: prom/prometheus:v3.1.0
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - invoicer-network
    depends_on:
      - invoicer-nginx
  invoicer-grafana:
    restart: always
    image: grafana/grafana:11.5.0
    ports:
      - "3000:3000"
    depends_on:
      - invoicer-prometheus
    networks:
      - invoicer-network
  invoicer-nginx:
    image: nginx:1.27-perl
    restart: always
    ports:
      - "80:80"
    networks:
      - invoicer-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
volumes:
  postgres-data:
networks:
  invoicer-network:
    driver: bridge